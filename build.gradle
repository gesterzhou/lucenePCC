/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
}

group 'org.apache.geode_examples.lucene'
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'

sourceCompatibility = 1.8
targetCompatibility = 1.8

run {
  if ( project.hasProperty("appArgs") ) {
    args Eval.me(appArgs)
  }
  standardInput = System.in
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenLocal()
    mavenCentral()
    maven {
        credentials {
            username "$gemfireReleaseRepoUser"
            password "$gemfireReleaseRepoPassword"
        }
        url "https://commercial-repo.pivotal.io/data3/gemfire-release-repo/gemfire"
    }
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    // implementation 'com.google.guava:guava:27.0.1-jre'

    compile "io.pivotal.gemfire:geode-core:9.7.1"
    compile "io.pivotal.gemfire:geode-lucene:9.7.1"
    compile "org.slf4j:slf4j-log4j12:1.7.21"

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

// Define the main class for the application
mainClassName = "org.apache.geode_examples.lucene.Example"

// now to create a fatjar

shadowJar {
    mergeServiceFiles()
}

jar {
    manifest {
        attributes(
                'Main-Class': 'org.apache.geode_examples.lucene.Example'
        )
    }
}

task fatJar(type: Jar) {
    baseName = 'lucene_example_all'
    from {
      configurations.compile.collect {
        it.isDirectory() ? it : zipTree(it).matching{
          exclude{it.path.contains('LICENSE')}
          exclude{it.path.contains('NOTICE')}
          exclude{it.path.contains('DEPENDENCIES')}
          exclude{it.path.contains('TokenFilterFactory')}
          exclude{it.path.contains('Log4j2Plugins.dat')}
        }
      }
    }
    with jar
    manifest {
        attributes(
                'Main-Class': 'org.apache.geode_examples.lucene.Example'
        )
    }
    // duplicatesStrategy 'exclude'
}   

tasks.jar.dependsOn(fatJar)
